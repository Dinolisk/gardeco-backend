1.
# PUSH | Transaction Check Request

> FUNCTION: This service will push Transaction Check Request to your system, enabling Card Linking and Digital Receipts as a service.
METHODS: Push, Webhook

## OpenAPI

```yaml
openapi: 3.0.1
info:
  title: ''
  description: ''
  version: 1.0.0
paths:
  /your-endpoint/:
    post:
      summary: PUSH | Transaction Check Request
      deprecated: false
      description: >-
        FUNCTION: This service will push Transaction Check Request to your
        system, enabling Card Linking and Digital Receipts as a service.

        METHODS: Push, Webhook
      tags:
        - XECR Cashier Systems/XECR-2 Transaction Check Request
        - XECR
        - XECR-2
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCheckRequestDto'
            example:
              schemaVersion: V1.0
              xReceipts:
                clientId: '123456789'
                roundTripId: 123e4567-e89b-12d3-a456-426614174000
                cardId: 550e8400-e29b-41d4-a716-446655440000
                cardholderConsents:
                  - consentId: e521cf62-a45f-49c5-8372-94853fffeb55
                    consentType: DIGITAL_RECEIPT
                    consentStatus: true
                cardholderMemberships:
                  - memberValue: '12345678'
                    memberValueType: MEMBER_NUMBER
                    memberValueProvider: OBOS
              merchantName: Maxbo - Oslo
              acquirerTerminalId: '123456789012345'
              acquirerTransactionTimestamp: '2023-04-01T12:00:00Z'
              transactionAmount:
                merchantTransactionAmount: 100
                merchantTransactionCurrency: NOK
                cardholderTransactionAmount: 95.5
                cardholderTransactionCurrency: SEK
              transactionIdentifier:
                authorizationCode: '009856'
                systemTraceAuditNumber: '986585'
                retrievalReferenceNumber: '20240532009856'
                transactionReference: TR123456789
              paymentCard:
                cardType: BANKAXEPT
                acquirerMerchantIds:
                  acquirerMerchantId: string
                  acquirerMerchantSubId: string
                maskedPan:
                  - maskedPanType: PRIMARY_PAN
                    maskedPanValue: '************1234'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
                x-apidog-ignore-properties: []
                x-apidog-orders: []
          headers: {}
          x-apidog-name: OK
      security:
        - apikey-header-x-api-key: []
      x-apidog-folder: XECR Cashier Systems/XECR-2 Transaction Check Request
      x-apidog-status: released
      x-run-in-apidog: https://app.apidog.com/web/project/443197/apis/api-14426111-run
components:
  schemas:
    TransactionCheckRequestDto:
      required:
        - acquirerTerminalId
        - acquirerTransactionTimestamp
        - merchantName
        - paymentCard
        - schemaVersion
        - transactionAmount
        - transactionIdentifier
      type: object
      properties:
        schemaVersion:
          type: string
          description: Schema Version
          examples:
            - V1.0
        xReceipts:
          $ref: '#/components/schemas/XReceiptTcr'
        merchantName:
          maxLength: 255
          type: string
          description: Merchant name
          examples:
            - Maxbo - Oslo
        acquirerTerminalId:
          type: string
          description: Acquirer terminal ID
          maxLength: 15
          minLength: 1
          examples:
            - '123456789012345'
        acquirerTransactionTimestamp:
          type: string
          description: Timestamp of the acquirer transaction
          format: date-time
          examples:
            - '2023-04-01T12:00:00Z'
        transactionAmount:
          $ref: '#/components/schemas/TransactionAmount'
        transactionIdentifier:
          $ref: '#/components/schemas/TransactionIdentifiers'
        paymentCard:
          $ref: '#/components/schemas/PaymentCardTcr'
      x-apidog-orders:
        - schemaVersion
        - xReceipts
        - merchantName
        - acquirerTerminalId
        - acquirerTransactionTimestamp
        - transactionAmount
        - transactionIdentifier
        - paymentCard
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    PaymentCardTcr:
      required:
        - cardType
        - maskedPan
      type: object
      properties:
        cardType:
          type: string
          description: Type of card used for payment
          enum:
            - BANKAXEPT
            - VISA
            - MASTERCARD
            - DINERS
            - AMERICAN_EXPRESS
            - DISCOVER
            - JCB
            - UNIONPAY
            - MAESTRO
            - UNKNOWN
          examples:
            - VISA
        acquirerMerchantIds:
          $ref: '#/components/schemas/AcquirerMerchantIdTcr'
        maskedPan:
          type: array
          description: List of Masked PANs associated with the Card Type
          items:
            $ref: '#/components/schemas/MaskedPan'
      description: Payment card information
      x-apidog-orders:
        - cardType
        - acquirerMerchantIds
        - maskedPan
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    MaskedPan:
      required:
        - maskedPanType
        - maskedPanValue
      type: object
      properties:
        maskedPanType:
          type: string
          description: >
            Classification of the masked PAN.

            Types:

            - PRIMARY_PAN: Original physical/digital card number

            - SUB_PAN: Tokenized versions (e.g., Google Pay, Apple Pay)


            Used to differentiate between original cards and their tokenized
            representations

            in digital wallets.
          enum:
            - PRIMARY_PAN
            - SECONDARY_PAN
            - BIN_6_FIRST
            - CARD_LAST_NUMBERS
            - PRIMARY_PAN
            - SUB_PAN
          examples:
            - PRIMARY_PAN
        maskedPanValue:
          maxLength: 19
          minLength: 8
          pattern: ^[*\d]{8,19}$
          type: string
          description: |
            Masked version of the card number (PAN).
            Format requirements:
            - Length: 8-19 characters
            - Contains only digits and asterisks (*)
            - Typically shows last 4 digits only
            - Compliant with PCI DSS masking requirements

            Example formats:
            - ************1234 (16-digit card)
            - ********1234 (12-digit card)
          examples:
            - '************1234'
      description: |
        Masked Payment Account Number (PAN) information.
        Contains the masked card number and its type classification.
        Used for:
        - Card identification
        - Transaction matching
        - Security compliance (PCI DSS)
        - Digital wallet integration
      x-apidog-orders:
        - maskedPanType
        - maskedPanValue
      examples:
        - maskedPanType: PRIMARY_PAN
          maskedPanValue: '************1234'
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    AcquirerMerchantIdTcr:
      type: object
      properties:
        acquirerMerchantId:
          type: string
          minLength: 1
          maxLength: 15
        acquirerMerchantSubId:
          type: string
          minLength: 1
          maxLength: 15
      x-apidog-orders:
        - acquirerMerchantId
        - acquirerMerchantSubId
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    TransactionIdentifiers:
      type: object
      properties:
        authorizationCode:
          maxLength: 6
          minLength: 6
          pattern: ^\d{6}$
          type: string
          description: Authorization code for the transaction
          examples:
            - '009856'
        systemTraceAuditNumber:
          maxLength: 6
          minLength: 6
          pattern: ^\d{6,12}$
          type: string
          description: System Trace Audit Number (STAN) for the transaction
          examples:
            - '986585'
        retrievalReferenceNumber:
          maxLength: 12
          minLength: 12
          pattern: ^\d{6,12}$
          type: string
          description: Retrieval Reference Number for the transaction
          examples:
            - '20240532009856'
        transactionReference:
          maxLength: 20
          type: string
          description: Optional Transaction Reference
          examples:
            - TR123456789
      description: Transaction unique identifiers
      x-apidog-orders:
        - authorizationCode
        - systemTraceAuditNumber
        - retrievalReferenceNumber
        - transactionReference
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    TransactionAmount:
      required:
        - merchantTransactionAmount
        - merchantTransactionCurrency
      type: object
      properties:
        merchantTransactionAmount:
          type: number
          description: |
            Transaction amount in merchant's local currency.
            - Must not be zero
            - Can be positive (charges) or negative (refunds)
            - Represents the actual amount charged at the terminal
          format: double
          examples:
            - 100
        merchantTransactionCurrency:
          pattern: ^[A-Z]{3}$
          type: string
          description: |
            ISO 4217 currency code for merchant's transaction.
            Must be a valid 3-letter currency code.
          examples:
            - NOK
        cardholderTransactionAmount:
          type: number
          description: |
            Transaction amount in cardholder's local currency.
            - Must not be zero
            - Can be positive (charges) or negative (refunds)
            - Represents the actual amount charged at the terminal
          format: double
          examples:
            - 100
        cardholderTransactionCurrency:
          pattern: ^[A-Z]{3}$
          type: string
          description: |
            ISO 4217 currency code for merchant's transaction.
            Must be a valid 3-letter currency code.
          examples:
            - SEK
        tipAmount:
          type: number
          format: double
          description: The tip amount
      description: >
        Transaction amount information containing both merchant and cardholder
        amounts.

        Supports multi-currency transactions where merchant and cardholder
        currencies differ.

        All amounts can be positive or negative but cannot be zero.
      x-apidog-orders:
        - merchantTransactionAmount
        - merchantTransactionCurrency
        - cardholderTransactionAmount
        - cardholderTransactionCurrency
        - tipAmount
      examples:
        - merchantTransactionAmount: 100
          merchantTransactionCurrency: NOK
          cardholderTransactionAmount: 95.5
          cardholderTransactionCurrency: SEK
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    XReceiptTcr:
      required:
        - cardholderConsents
        - cardholderMemberships
        - cardId
        - clientId
      type: object
      properties:
        clientId:
          pattern: ^\d{9}$
          type: string
          description: >-
            Client ID (public VAT number of the company representing your
            cashier system)
          examples:
            - '123456789'
        roundTripId:
          pattern: >-
            ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          type: string
          description: Round trip ID
          examples:
            - 123e4567-e89b-12d3-a456-426614174000
        cardId:
          description: Cardholder reference
          $ref: '#/components/schemas/CardId'
        cardholderConsents:
          type: array
          description: List of cardholder consents
          items:
            $ref: '#/components/schemas/CardholderConsent'
        cardholderMemberships:
          type: array
          description: List of cardholder memberships associated with the transaction
          items:
            $ref: '#/components/schemas/CardholderMembership'
      x-apidog-orders:
        - clientId
        - roundTripId
        - cardId
        - cardholderConsents
        - cardholderMemberships
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    CardholderMembership:
      required:
        - memberValue
        - memberValueProvider
        - memberValueType
      type: object
      properties:
        memberValue:
          maxLength: 50
          minLength: 0
          type: string
          description: Member value (typically the value of the memberValue Type)
          examples:
            - '12345678'
        memberValueType:
          type: string
          description: Type of member value
          enum:
            - MEMBER_NUMBER
            - REWARD_NUMBER
            - LOYALTY_NUMBER
          examples:
            - MEMBER_NUMBER
        memberValueProvider:
          maxLength: 100
          minLength: 0
          type: string
          description: >-
            Name of the loyalty or reward program associated with the member
            value
          examples:
            - OBOS
      description: Cardholder membership information
      x-apidog-orders:
        - memberValue
        - memberValueType
        - memberValueProvider
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    CardholderConsent:
      required:
        - consentId
        - consentStatus
        - consentType
      type: object
      properties:
        consentId:
          type: string
          format: uuid
        consentType:
          type: string
          enum:
            - DIGITAL_RECEIPT
            - CARD_LINKING
            - MARKETING
          x-apidog-enum:
            - value: DIGITAL_RECEIPT
              name: ''
              description: ''
            - value: CARD_LINKING
              name: ''
              description: ''
            - value: MARKETING
              name: ''
              description: ''
        consentStatus:
          type: boolean
      description: Cardholder Consent
      x-apidog-orders:
        - consentId
        - consentType
        - consentStatus
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    CardId:
      $ref: '#/components/schemas/Number_UUID'
      description: Card ID - Unique identifier for the payment card
      x-apidog-folder: ''
    Number_UUID:
      type: string
      format: uuid
      examples:
        - 550e8400-e29b-41d4-a716-446655440000
      maxLength: 36
      minLength: 36
      pattern: >-
        ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
      description: UUID
      x-apidog-mock: '{{$string.uuid}}'
      x-apidog-folder: ''
  securitySchemes:
    apikey-header-x-api-key:
      type: apiKey
      in: header
      name: x-api-key
servers:
  - url: https://stg.xrr.receipts.no/ReceiveReceipt/api
    description: Production
  - url: https://stg.xcr.receipts.no/CardRecognition/api
    description: Staging
security:
  - apikey-header-x-api-key: []

```



Example:
curl --location --request POST 'https://stg.xcr.receipts.no/CardRecognition/api/your-endpoint/' \
--header 'Content-Type: application/json' \
--header 'x-api-key;' \
--data-raw '{
  "schemaVersion": "V1.0",
  "xReceipts": {
    "clientId": "123456789",
    "roundTripId": "123e4567-e89b-12d3-a456-426614174000",
    "cardId": "550e8400-e29b-41d4-a716-446655440000",
    "cardholderConsents": [
      {
        "consentId": "e521cf62-a45f-49c5-8372-94853fffeb55",
        "consentType": "DIGITAL_RECEIPT",
        "consentStatus": true
      }
    ],
    "cardholderMemberships": [
      {
        "memberValue": "12345678",
        "memberValueType": "MEMBER_NUMBER",
        "memberValueProvider": "OBOS"
      }
    ]
  },
  "merchantName": "Maxbo - Oslo",
  "acquirerTerminalId": "123456789012345",
  "acquirerTransactionTimestamp": "2023-04-01T12:00:00Z",
  "transactionAmount": {
    "merchantTransactionAmount": 100,
    "merchantTransactionCurrency": "NOK",
    "cardholderTransactionAmount": 95.5,
    "cardholderTransactionCurrency": "SEK"
  },
  "transactionIdentifier": {
    "authorizationCode": "009856",
    "systemTraceAuditNumber": "986585",
    "retrievalReferenceNumber": "20240532009856",
    "transactionReference": "TR123456789"
  },
  "paymentCard": {
    "cardType": "BANKAXEPT",
    "acquirerMerchantIds": {
      "acquirerMerchantId": "string",
      "acquirerMerchantSubId": "string"
    },
    "maskedPan": [
      {
        "maskedPanType": "PRIMARY_PAN",
        "maskedPanValue": "************1234"
      }
    ]
  }
}'


Response:
{}


2.
# 1-1 | Receipt - Bundle Items

## Overview

The bundle items feature allows you to group related items together in a receipt, supporting both free included items and bundled items with additional costs. Bundles are implemented using the itemMetadata field to link items together with a common bundleGroup identifier.
Bundle Types
<br>

### 1. Bundles with Free Items

Used when additional items are included at no extra cost (e.g., a gaming console with a free controller).
<br>

**Example:**
```js

    "lineItems": [
        {
            "itemName": "Gaming Console XYZ",
            "itemDescription": "Next-gen gaming console with free accessories",
            "itemIds": {
                "id": "PROD-789",
                "ean": "5901234123999"
            },
            "itemPrice": {
                "priceIncVat": 499.99,
                "priceExcVat": 399.99,
                "vatRate": 25,
                "vatAmount": 100
            },
            "itemQuantity": {
                "type": "PCS",
                "quantity": 1
            },
            "itemMetadata": {
                "key": "bundleGroup",
                "value": "console-pack-1"
            }
        },
        {
            "itemName": "Controller",
            "itemDescription": "Additional controller - Included free with console",
            "itemIds": {
                "id": "PROD-790",
                "ean": "5901234124000"
            },
            "itemPrice": {
                "priceIncVat": 0,
                "priceExcVat": 0,
                "vatRate": 25,
                "vatAmount": 0
            },
            "itemQuantity": {
                "type": "PCS",
                "quantity": 1
            },
            "itemMetadata": {
                "key": "bundleGroup",
                "value": "console-pack-1"
            }
        }
    ]
}

```
<br>

### 2. Bundles with Additional Cost

Used when bundled items have their own prices and may share discounts (e.g., a laptop with paid upgrades).
<br>

**Example:**
```js
    "lineItems": [
        {
            "itemName": "Base Laptop Model",
            "itemDescription": "15-inch laptop with selected upgrades",
            "itemIds": {
                "id": "PROD-123",
                "ean": "5901234123444"
            },
            "itemPrice": {
                "priceIncVat": 999.99,
                "priceExcVat": 799.99,
                "vatRate": 25,
                "vatAmount": 200
            },
            "itemQuantity": {
                "type": "PCS",
                "quantity": 1
            },
            "itemDiscount": {
                "amount": 100,
                "percentage": 10,
                "description": "Bundle discount"
            },
            "itemMetadata": {
                "key": "bundleGroup",
                "value": "laptop-config-1"
            }
        },
        {
            "itemName": "RAM Upgrade",
            "itemDescription": "Additional 16GB RAM for laptop",
            "itemIds": {
                "id": "PROD-124",
                "ean": "5901234123445"
            },
            "itemPrice": {
                "priceIncVat": 89.99,
                "priceExcVat": 71.99,
                "vatRate": 25,
                "vatAmount": 18
            },
            "itemQuantity": {
                "type": "PCS",
                "quantity": 1
            },
            "itemDiscount": {
                "amount": 9,
                "percentage": 10,
                "description": "Bundle discount"
            },
            "itemMetadata": {
                "key": "bundleGroup",
                "value": "laptop-config-1"
            }
        }
    ]
}
```
<br>


**Best Practices**

1. Use consistent bundleGroup values for all items in the same bundle
2. Set prices to 0 for free included items
3. Apply consistent discount percentages across all items in a bundle
4. Provide clear item descriptions indicating bundle relationship
5. Maintain unique product IDs and EANs for each bundle component


3.
# Submit a digital receipt

> ENVIRONMENT:  "stg-receive-receipt-api"

Endpoint for submitting a digital receipt.

## OpenAPI

```yaml
openapi: 3.0.1
info:
  title: ''
  description: ''
  version: 1.0.0
paths:
  /putReceipt:
    post:
      summary: Submit a digital receipt
      deprecated: false
      description: |-
        ENVIRONMENT:  "stg-receive-receipt-api"

        Endpoint for submitting a digital receipt.
      operationId: putReceipt
      tags:
        - XDRE Digital Receipt
        - XDRE
        - XECR
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              description: Digital receipt to be processed
              $ref: '#/components/schemas/DigitalReceipt'
            example:
              xReceipts:
                schemaVersion: '1.0'
                cashierSystemId: '123456789'
                roundTripId: 123e4567-e89b-12d3-a456-426614174000
                cardId: 123e4567-e89b-12d3-a456-426614174000
                cardholderMemberships:
                  - memberValue: '12345678'
                    memberValueType: MEMBER_NUMBER
                    memberValueProvider: OBOS
              header:
                headerText: string
                merchantLogoUrl: https://www.example.com/logo.png
              generalInformation:
                receiptType: DIGITAL_RECEIPT
                systemTimestamp: '2023-04-01T12:00:00Z'
                receiptNumber: REC-12345
                receiptNumberToBarcode:
                  format: EAN
                  applicationId: REC
                freeText: string
              merchant:
                merchantName: Maxbo Oslo
                merchantCompanyId: 123456789MVA
                branch:
                  branchName: Maxbo - Oslo
                  slogan: Welcome to Maxbo!
                  email: contact@maxbo.no
                  phone: '+4740406060'
                  websiteUrl: https://www.maxbo.no
                  address:
                    addressLine1: 123 Main St
                    addressLine2: Apt 4B
                    city: New York
                    zipCode: '10001'
                    country: USA
              lineItems:
                - itemName: Organic Banana
                  itemDescription: Fresh organic bananas from Ecuador
                  itemIds:
                    id: PROD-12345
                    ean: '5901234123457'
                    gtin: '00012345600012'
                    epd: EPD123456
                  itemPrice:
                    priceIncVat: 120
                    priceExcVat: 100
                    vatRate: 20
                    vatAmount: 20
                  itemQuantity:
                    type: PCS"SINGLE", "PCS", "KG"
                    quantity: 2.5
                  itemDiscount:
                    amount: 10
                    percentage: 10
                    description: string
                  itemSumTotal: 120
                  itemMetadata:
                    key: colourCode
                    value: '#C1C1C1'
                  itemMetadataList:
                    - key: ''
                      value: ''
              orderSummary:
                currencyIsoCode: USD
                totalAmountIncVat: 120
                totalAmountExcVat: 100
                vatSummary:
                  - vatRate: 20
                    vatAmount: 200
              payment:
                - type: CARD
                  cardType: BANKAXEPT
                  maskedPan: 900426******1200
                  acquirerTransactionTimestamp: '2025-01-09T12:57:00Z'
                  acquirerTerminalId: '04813694'
                  acquirerMerchantId: '111058'
                  transactionIdentifiers:
                    authorizationCode: '002404'
                  transactionAmount:
                    merchantTransactionAmount: 50
                    merchantTransactionCurrency: NOK
                    cardholderTransactionAmount: 50
                    cardholderTransactionCurrency: NOK
                  splitPayments:
                    - type: CARD
                      cardType: BANKAXEPT
                      maskedPan: 900426******1200
                      acquirerTransactionTimestamp: '2025-01-09T12:57:00Z'
                      acquirerTerminalId: '04813694'
                      acquirerMerchantId: '111058'
                      transactionIdentifiers:
                        authorizationCode: '002403'
                      transactionAmount:
                        merchantTransactionAmount: 50
                        merchantTransactionCurrency: NOK
                        cardholderTransactionAmount: 50
                        cardholderTransactionCurrency: NOK
                    - amount: 40
                      splitId: null
                      type: CASH
              qrCode:
                value: https://example.com/receipt/123456
                valueEncoding: UTF-8
                errorCorrectionLevel: L
              footerText: string
      responses:
        '200':
          description: Receipt successfully processed
          content:
            application/json:
              schema: &ref_0
                $ref: '#/components/schemas/XApiResponse'
              example:
                roundTripId: 123e4567-e89b-12d3-a456-426614174000
                status: OK
                message: Success
                data: Receipt saved successfully
          headers: {}
          x-apidog-name: OK
        '400':
          description: Invalid receipt data
          content:
            application/json:
              schema: *ref_0
              example:
                roundTripId: 123e4567-e89b-12d3-a456-426614174000
                status: BAD_REQUEST_400
                message: Receipt could not be saved
                data: null
          headers: {}
          x-apidog-name: Bad Request
        '403':
          description: Forbidden
          content:
            '*/*':
              schema: &ref_1
                $ref: '#/components/schemas/XApiResponseObject'
          headers: {}
          x-apidog-name: Forbidden
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                oneOf:
                  - type: string
                  - *ref_1
          headers: {}
          x-apidog-name: Record Not Found
        '409':
          description: Conflict
          content:
            '*/*':
              schema: *ref_1
          headers: {}
          x-apidog-name: '409'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema: *ref_1
          headers: {}
          x-apidog-name: Server Error
      security:
        - apikey-header-x-api-key: []
      x-api-version:
        - '1.0'
      x-api-id: XDRE-1
      x-apidog-folder: XDRE Digital Receipt
      x-apidog-status: released
      x-run-in-apidog: https://app.apidog.com/web/project/443197/apis/api-13007808-run
components:
  schemas:
    DigitalReceipt:
      required:
        - generalInformation
        - lineItems
        - merchant
        - orderSummary
        - payment
        - xReceipts
      type: object
      properties:
        xReceipts:
          $ref: '#/components/schemas/XReceipts'
        header:
          $ref: '#/components/schemas/Header'
        generalInformation:
          $ref: '#/components/schemas/GeneralInformation'
        merchant:
          $ref: '#/components/schemas/Merchant'
        lineItems:
          maxItems: 2147483647
          minItems: 1
          type: array
          description: List of line items in the receipt
          items:
            type: object
            x-apidog-refs:
              01JNS29WZH3KEYETPD317K7PPZ:
                $ref: '#/components/schemas/LineItem'
                x-apidog-overrides: {}
            properties:
              itemName:
                type: string
                description: Name of the item
                examples:
                  - Organic Banana
              itemDescription:
                maxLength: 100
                minLength: 0
                type: string
                description: Description of the item
                examples:
                  - Fresh organic bananas from Ecuador
              itemIds: &ref_2
                $ref: '#/components/schemas/ItemIds'
              itemPrice: &ref_3
                $ref: '#/components/schemas/ItemPrice'
              itemQuantity: &ref_4
                $ref: '#/components/schemas/ItemQuantity'
              itemDiscount: &ref_5
                $ref: '#/components/schemas/ItemDiscount'
              itemSumTotal:
                type: number
                description: Total sum for this line item incl VAT
                format: double
                examples:
                  - 120
              itemMetadata: &ref_6
                $ref: '#/components/schemas/ItemMetadata1'
                description: >-
                  Additional metadata for the item introducing an open Key:Value
                  Object
              itemMetadataList:
                type: array
                items: &ref_7
                  $ref: '#/components/schemas/ItemMetadata'
                description: >-
                  Additional metadata for the item introducing an open Key:Value
                  List
            x-apidog-orders:
              - 01JNS29WZH3KEYETPD317K7PPZ
            required:
              - itemName
              - itemIds
              - itemPrice
              - itemQuantity
              - itemSumTotal
              - itemMetadataList
            x-apidog-ignore-properties:
              - itemName
              - itemDescription
              - itemIds
              - itemPrice
              - itemQuantity
              - itemDiscount
              - itemSumTotal
              - itemMetadata
              - itemMetadataList
        orderSummary:
          $ref: '#/components/schemas/OrderSummary'
        payment:
          maxItems: 2147483647
          minItems: 1
          type: array
          description: List of payment information
          items:
            $ref: '#/components/schemas/CardPayment'
        qrCode:
          $ref: '#/components/schemas/QrCode'
        cuopons:
          type: array
          items:
            $ref: '#/components/schemas/X-Coupon'
        footerText:
          maxLength: 300
          minLength: 0
          type: string
          description: Footer text of the receipt
      description: Digital receipt information
      x-apidog-orders:
        - xReceipts
        - header
        - generalInformation
        - merchant
        - lineItems
        - orderSummary
        - payment
        - qrCode
        - cuopons
        - footerText
      x-apidog-refs: {}
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    X-Coupon:
      title: X-Coupon
      description: JSON Schema for a universal coupon/voucher
      type: object
      required:
        - id
        - uuid
        - type
        - name
        - description
        - discount
        - validity
        - channels
      properties:
        id:
          type: string
          description: Unique identifier for the coupon
          minLength: 3
          maxLength: 50
          examples:
            - SUMMER2025
          pattern: ^[A-Z0-9_-]+$
        uuid:
          type: string
          description: External unique identifier for the coupon
          format: uuid
          examples:
            - 123e4567-e89b-12d3-a456-426614174000
        type:
          type: string
          description: Type of coupon
          enum:
            - DISCOUNT
            - CASHBACK
            - GIFT
            - BUY_ONE_GET_ONE
            - BONUS_POINTS
          examples:
            - DISCOUNT
        name:
          type: string
          description: Display name for the coupon
          minLength: 3
          maxLength: 100
          examples:
            - Summer Sale 2025
        description:
          type: string
          description: Detailed description of what the coupon offers
          minLength: 5
          maxLength: 500
          examples:
            - Get 25% off on all summer products
        imageUrl:
          type: string
          description: URL to the coupon image
          format: uri
          examples:
            - https://example.com/images/summer-sale.png
        discount:
          type: object
          description: Discount information
          required:
            - value
            - type
          properties:
            value:
              type: number
              description: Amount of discount
              minimum: 0
              exclusiveMinimum: true
              examples:
                - 25
            type:
              type: string
              description: Type of discount
              enum:
                - PERCENTAGE
                - FIXED_AMOUNT
                - FREE_ITEM
              examples:
                - PERCENTAGE
            maxDiscountAmount:
              type: number
              description: Optional cap on discount amount
              minimum: 0
              examples:
                - 50
            minPurchaseAmount:
              type: number
              description: Minimum purchase required (if any)
              minimum: 0
              examples:
                - 100
            currency:
              type: string
              description: Currency for amounts
              enum:
                - NOK
                - SEK
                - DNK
                - USD
                - GDP
                - EUR
              examples:
                - USD
            appliesTo:
              type: object
              description: Rules for what products the discount applies to
              required:
                - scope
              properties:
                scope:
                  type: string
                  description: Scope of applicability
                  enum:
                    - ALL_ITEMS
                    - SPECIFIC_ITEMS
                    - CATEGORIES
                  examples:
                    - SPECIFIC_ITEMS
                items:
                  type: array
                  description: Specific item SKUs this applies to
                  items:
                    type: string
                    minLength: 1
                    maxLength: 100
                  examples:
                    - - SKU123
                      - SKU456
                categories:
                  type: array
                  description: Categories this applies to
                  items:
                    type: string
                    minLength: 1
                    maxLength: 100
                  examples:
                    - - SUMMER_WEAR
                excludedItems:
                  type: array
                  description: Specific item SKUs that are excluded
                  items:
                    type: string
                    minLength: 1
                    maxLength: 100
                  examples:
                    - - SKU789
                excludedCategories:
                  type: array
                  description: Categories that are excluded
                  items:
                    type: string
                    enum:
                      - ON_SALE
                      - NEW_RELEASE
                  examples:
                    - - ON_SALE
              x-apidog-orders:
                - scope
                - items
                - categories
                - excludedItems
                - excludedCategories
              x-apidog-ignore-properties: []
          x-apidog-orders:
            - value
            - type
            - maxDiscountAmount
            - minPurchaseAmount
            - currency
            - appliesTo
          x-apidog-ignore-properties: []
        validity:
          type: object
          description: Validity period for the coupon
          required:
            - startDate
            - endDate
          properties:
            startDate:
              type: string
              description: Start date and time of validity period
              format: date-time
              examples:
                - '2025-06-01T00:00:00Z'
            endDate:
              type: string
              description: End date and time of validity period
              format: date-time
              examples:
                - '2025-08-31T23:59:59Z'
            timezone:
              type: string
              description: Timezone for validity period
              examples:
                - UTC
            validDays:
              type: array
              description: Specific days of week when the coupon is valid
              items:
                type: string
                enum:
                  - monday
                  - tuesday
                  - wednesday
                  - thursday
                  - friday
                  - saturday
                  - sunday
              examples:
                - - monday
                  - tuesday
                  - wednesday
                  - thursday
                  - friday
            validHours:
              type: object
              description: Specific hours of day when the coupon is valid
              required:
                - start
                - end
              properties:
                start:
                  type: string
                  description: Start time in 24-hour format
                  pattern: ^([01]?[0-9]|2[0-3]):[0-5][0-9]$
                  examples:
                    - '09:00'
                end:
                  type: string
                  description: End time in 24-hour format
                  pattern: ^([01]?[0-9]|2[0-3]):[0-5][0-9]$
                  examples:
                    - '18:00'
              x-apidog-orders:
                - start
                - end
              x-apidog-ignore-properties: []
          x-apidog-orders:
            - startDate
            - endDate
            - timezone
            - validDays
            - validHours
          x-apidog-ignore-properties: []
        channels:
          type: object
          description: Redemption channels for the coupon
          properties:
            online:
              type: boolean
              description: Whether the coupon can be redeemed online
              examples:
                - true
            inStore:
              type: boolean
              description: Whether the coupon can be redeemed in-store
              examples:
                - false
            app:
              type: boolean
              description: Whether the coupon can be redeemed in app
              examples:
                - true
          x-apidog-orders:
            - online
            - inStore
            - app
          x-apidog-ignore-properties: []
        redemptionMethod:
          type: object
          description: Method for redeeming the coupon
          properties:
            linkedPaymentCard:
              type: boolean
              description: Whether user must use the linked payment card
              examples:
                - true
            cardId:
              type: string
              description: The unique id for the payment card
              format: uuid
              examples:
                - 123e4567-e89b-12d3-a456-426614174000
          x-apidog-orders:
            - linkedPaymentCard
            - cardId
          required:
            - linkedPaymentCard
            - cardId
          x-apidog-ignore-properties: []
        buyOneGetOne:
          type: object
          description: Details for Buy One Get One (BOGO) type offers
          required:
            - buyQuantity
            - getQuantity
            - value
            - type
          properties:
            buyQuantity:
              type: integer
              description: Quantity that must be purchased
              minimum: 1
              examples:
                - 2
            getQuantity:
              type: integer
              description: Quantity that will be discounted
              minimum: 1
              examples:
                - 1
            buyItems:
              type: array
              description: Items that must be purchased
              items:
                type: string
                minLength: 1
                maxLength: 100
              examples:
                - - SKU123
            getItems:
              type: array
              description: Items that are free/discounted
              items:
                type: string
                minLength: 1
                maxLength: 100
              examples:
                - - SKU456
            value:
              type: number
              description: Amount of discount for BOGO items
              minimum: 0
              exclusiveMinimum: true
              examples:
                - 100
            type:
              type: string
              description: Type of discount for BOGO items
              enum:
                - PERCENTAGE
                - FIXED_AMOUNT
                - FREE_ITEM
              examples:
                - PERCENTAGE
          x-apidog-orders:
            - buyQuantity
            - getQuantity
            - buyItems
            - getItems
            - value
            - type
          x-apidog-ignore-properties: []
      x-apidog-orders:
        - id
        - uuid
        - type
        - name
        - description
        - imageUrl
        - discount
        - validity
        - channels
        - redemptionMethod
        - buyOneGetOne
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    QrCode:
      required:
        - errorCorrectionLevel
        - value
        - valueEncoding
      type: object
      properties:
        value:
          type: string
          description: QR Code value (typically a URL)
          examples:
            - https://example.com/receipt/123456
        valueEncoding:
          type: string
          description: Encoding method for the QR Code
          enum:
            - UTF-8
            - UTF-16
            - ISO-8859-1
            - SHIFT_JIS
            - ASCII
          examples:
            - UTF-8
        errorCorrectionLevel:
          type: string
          description: Error correction level
          enum:
            - L
            - M
            - Q
            - H
            - L
            - M
            - Q
            - H
          examples:
            - M
      description: QR Code information
      x-apidog-orders:
        - value
        - valueEncoding
        - errorCorrectionLevel
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    CardPayment:
      description: Card payment information
      allOf:
        - $ref: '#/components/schemas/Payment'
        - type: object
          properties:
            cardType:
              type: string
              description: Type of card used for payment
              enum:
                - BANKAXEPT
                - VISA
                - MASTERCARD
                - UNKNOWN
              examples:
                - VISA
              x-apidog-enum:
                - value: BANKAXEPT
                  name: ''
                  description: ''
                - value: VISA
                  name: ''
                  description: ''
                - value: MASTERCARD
                  name: ''
                  description: ''
                - value: UNKNOWN
                  name: ''
                  description: ''
            maskedPan:
              pattern: ^[*\d]{4,19}$
              type: string
              description: Masked PAN (Primary Account Number)
              examples:
                - '****1234'
            acquirerTransactionTimestamp:
              type: string
              description: Timestamp of the acquirer transaction
              examples:
                - '2023-04-01T12:00:00Z'
            acquirerTerminalId:
              type: string
              description: Acquirer terminal ID
              examples:
                - '123456'
              minLength: 1
              maxLength: 15
            acquirerMerchantId:
              pattern: ^\d{6,15}$
              type: string
              description: Acquirer merchant ID
              examples:
                - '789012'
            transactionIdentifiers:
              $ref: '#/components/schemas/TransactionIdentifiers'
            transactionAmount:
              $ref: '#/components/schemas/TransactionAmount'
            transactionRawText:
              maxLength: 300
              minLength: 1
              type: string
              description: Raw transaction text
            terminalProvider:
              type: string
              description: Terminal provider
              enum:
                - VERIFONE
                - NETS
                - PAX
                - ADYEN
                - PAYEX
                - SWEDBANK
                - SUMUP
                - UNKNOWN
          x-apidog-orders:
            - cardType
            - maskedPan
            - acquirerTransactionTimestamp
            - acquirerTerminalId
            - acquirerMerchantId
            - transactionIdentifiers
            - transactionAmount
            - transactionRawText
            - terminalProvider
          x-apidog-ignore-properties: []
      x-apidog-orders: []
      x-apidog-folder: ''
    TransactionAmount:
      required:
        - merchantTransactionAmount
        - merchantTransactionCurrency
      type: object
      properties:
        merchantTransactionAmount:
          type: number
          description: |
            Transaction amount in merchant's local currency.
            - Must not be zero
            - Can be positive (charges) or negative (refunds)
            - Represents the actual amount charged at the terminal
          format: double
          examples:
            - 100
        merchantTransactionCurrency:
          pattern: ^[A-Z]{3}$
          type: string
          description: |
            ISO 4217 currency code for merchant's transaction.
            Must be a valid 3-letter currency code.
          examples:
            - NOK
        cardholderTransactionAmount:
          type: number
          description: |
            Transaction amount in cardholder's local currency.
            - Must not be zero
            - Can be positive (charges) or negative (refunds)
            - Represents the actual amount charged at the terminal
          format: double
          examples:
            - 100
        cardholderTransactionCurrency:
          pattern: ^[A-Z]{3}$
          type: string
          description: |
            ISO 4217 currency code for merchant's transaction.
            Must be a valid 3-letter currency code.
          examples:
            - SEK
        tipAmount:
          type: number
          format: double
          description: The tip amount
      description: >
        Transaction amount information containing both merchant and cardholder
        amounts.

        Supports multi-currency transactions where merchant and cardholder
        currencies differ.

        All amounts can be positive or negative but cannot be zero.
      x-apidog-orders:
        - merchantTransactionAmount
        - merchantTransactionCurrency
        - cardholderTransactionAmount
        - cardholderTransactionCurrency
        - tipAmount
      examples:
        - merchantTransactionAmount: 100
          merchantTransactionCurrency: NOK
          cardholderTransactionAmount: 95.5
          cardholderTransactionCurrency: SEK
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    TransactionIdentifiers:
      type: object
      properties:
        authorizationCode:
          maxLength: 6
          minLength: 6
          pattern: ^\d{6}$
          type: string
          description: Authorization code for the transaction
          examples:
            - '009856'
        systemTraceAuditNumber:
          maxLength: 6
          minLength: 6
          pattern: ^\d{6,12}$
          type: string
          description: System Trace Audit Number (STAN) for the transaction
          examples:
            - '986585'
        retrievalReferenceNumber:
          maxLength: 12
          minLength: 12
          pattern: ^\d{6,12}$
          type: string
          description: Retrieval Reference Number for the transaction
          examples:
            - '20240532009856'
        transactionReference:
          maxLength: 20
          type: string
          description: Optional Transaction Reference
          examples:
            - TR123456789
      description: Transaction unique identifiers
      x-apidog-orders:
        - authorizationCode
        - systemTraceAuditNumber
        - retrievalReferenceNumber
        - transactionReference
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    Payment:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          description: Type of payment
          enum:
            - CARD
            - CASH
            - VIPPS
            - GIFT_CARD
          examples:
            - CARD
        splitPayment:
          type: array
          description: Split Payment Information
          items:
            $ref: '#/components/schemas/SplitPayment'
      description: Payment information
      discriminator:
        propertyName: type
      x-apidog-orders:
        - type
        - splitPayment
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    SplitPayment:
      required:
        - type
      type: object
      properties:
        splitId:
          type: string
          description: Identifier for this part of the split payment
          examples:
            - SPLIT-001
        type:
          type: string
          description: Type of payment
          enum:
            - CARD
            - CASH
            - VIPPS
          examples:
            - CASH
      description: Split payment information
      x-apidog-orders:
        - splitId
        - type
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    OrderSummary:
      required:
        - totalAmountExcVat
        - totalAmountIncVat
        - vatSummary
      type: object
      properties:
        orderDiscount:
          type: number
          description: Order discount
          format: double
          examples:
            - 200
        currencyIsoCode:
          pattern: ^[A-Z]{2,3}$
          type: string
          description: ISO 4217 currency code
          examples:
            - USD
        totalAmountIncVat:
          type: number
          description: Total amount including VAT
          format: double
          examples:
            - 120
        totalAmountExcVat:
          type: number
          description: Total amount excluding VAT
          format: double
          examples:
            - 100
        vatSummary:
          maxItems: 2147483647
          minItems: 1
          type: array
          description: Summary of VAT amounts
          items:
            $ref: '#/components/schemas/VatSummary'
      description: Summary of the order
      x-apidog-orders:
        - orderDiscount
        - currencyIsoCode
        - totalAmountIncVat
        - totalAmountExcVat
        - vatSummary
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    VatSummary:
      required:
        - vatAmount
        - vatRate
      type: object
      properties:
        vatRate:
          maximum: 100
          minimum: 0
          type: number
          description: VAT rate in % applied to the item
          format: double
          examples:
            - 20
        vatAmount:
          type: number
          description: VAT amount
          format: double
          examples:
            - 200
      description: VAT summary information
      x-apidog-orders:
        - vatRate
        - vatAmount
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    ItemMetadata:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
          description: Metadata key
          examples:
            - colourCode
        value:
          type: string
          description: Metadata key
          examples:
            - '#C1C1C1'
      description: Build your own metadata object
      x-apidog-orders:
        - key
        - value
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    ItemMetadata1:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
          description: Metadata key
          examples:
            - colourCode
        value:
          type: string
          description: Metadata key
          examples:
            - '#C1C1C1'
      description: Build your own metadata object
      x-apidog-orders:
        - key
        - value
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    ItemDiscount:
      required:
        - amount
        - percentage
      type: object
      properties:
        amount:
          type: number
          description: Discounted amount
          format: double
          examples:
            - 10
        percentage:
          maximum: 100
          minimum: 0
          type: number
          description: Discounted percentage
          format: double
          examples:
            - 10
        description:
          maxLength: 100
          minLength: 0
          type: string
          description: Description of the discount
      description: Discount information for an item
      x-apidog-orders:
        - amount
        - percentage
        - description
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    ItemQuantity:
      required:
        - quantity
        - type
      type: object
      properties:
        type:
          type: string
          description: Type of quantity measurement
          examples:
            - PCS"SINGLE", "PCS", "KG"
        quantity:
          type: number
          description: Quantity of the item
          format: double
          examples:
            - 2.5
      description: Quantity information for an item
      x-apidog-orders:
        - type
        - quantity
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    ItemPrice:
      required:
        - priceExcVat
        - priceIncVat
        - vatAmount
        - vatRate
      type: object
      properties:
        priceIncVat:
          type: number
          description: Item price including VAT
          format: double
          examples:
            - 120
        priceExcVat:
          type: number
          description: Item price excluding VAT
          format: double
          examples:
            - 100
        vatRate:
          maximum: 100
          minimum: 0
          type: number
          description: VAT rate in % applied to the item
          format: double
          examples:
            - 20
        vatAmount:
          type: number
          description: VAT amount for the item
          format: double
          examples:
            - 20
      description: Price information for an item
      x-apidog-orders:
        - priceIncVat
        - priceExcVat
        - vatRate
        - vatAmount
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    ItemIds:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Item or Product ID
          examples:
            - PROD-12345
        ean:
          pattern: ^(\d{8}|\d{13}|\d{14})$
          type: string
          description: EAN (European Article Number)
          examples:
            - '5901234123457'
        gtin:
          pattern: ^(\d{8}|\d{12,14})$
          type: string
          description: GTIN (Global Trade Item Number)
          examples:
            - '00012345600012'
        epd:
          type: string
          description: EPD (Electronic Product Code)
          examples:
            - EPD123456
      description: Identification information for an item
      x-apidog-orders:
        - id
        - ean
        - gtin
        - epd
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    LineItem:
      required:
        - itemIds
        - itemName
        - itemPrice
        - itemQuantity
        - itemSumTotal
        - itemMetadataList
      type: object
      properties:
        itemName:
          type: string
          description: Name of the item
          examples:
            - Organic Banana
        itemDescription:
          maxLength: 100
          minLength: 0
          type: string
          description: Description of the item
          examples:
            - Fresh organic bananas from Ecuador
        itemIds: *ref_2
        itemPrice: *ref_3
        itemQuantity: *ref_4
        itemDiscount: *ref_5
        itemSumTotal:
          type: number
          description: Total sum for this line item incl VAT
          format: double
          examples:
            - 120
        itemMetadata: *ref_6
        itemMetadataList:
          type: array
          items: *ref_7
          description: Additional metadata for the item introducing an open Key:Value List
      description: Information for a single line item in the receipt
      x-apidog-orders:
        - itemName
        - itemDescription
        - itemIds
        - itemPrice
        - itemQuantity
        - itemDiscount
        - itemSumTotal
        - itemMetadata
        - itemMetadataList
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    Merchant:
      required:
        - branch
        - merchantName
      type: object
      properties:
        merchantName:
          type: string
          description: Name of the merchant
          examples:
            - Maxbo Oslo
        merchantCompanyId:
          type: string
          description: >-
            Company ID of the merchant (digits, optionally followed by 2-4
            uppercase letters)
          examples:
            - 123456789MVA
        branch:
          $ref: '#/components/schemas/Branch'
      description: Information about the merchant
      x-apidog-orders:
        - merchantName
        - merchantCompanyId
        - branch
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    Branch:
      required:
        - address
      type: object
      properties:
        branchName:
          maxLength: 50
          minLength: 0
          type: string
          description: Name of the branch
          examples:
            - Maxbo - Oslo
        slogan:
          maxLength: 100
          minLength: 0
          type: string
          description: Branch slogan
          examples:
            - Welcome to Maxbo!
        email:
          type: string
          description: Branch email address
          examples:
            - contact@maxbo.no
        phone:
          type: string
          description: Branch phone number
          examples:
            - '+4740406060'
        websiteUrl:
          type: string
          description: Branch website URL
          examples:
            - https://www.maxbo.no
        address:
          $ref: '#/components/schemas/Address'
      description: Branch information
      x-apidog-orders:
        - branchName
        - slogan
        - email
        - phone
        - websiteUrl
        - address
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    Address:
      required:
        - addressLine1
      type: object
      properties:
        addressLine1:
          maxLength: 50
          minLength: 0
          type: string
          description: First line of the address
          examples:
            - 123 Main St
        addressLine2:
          maxLength: 50
          minLength: 0
          type: string
          description: Second line of the address
          examples:
            - Apt 4B
        city:
          maxLength: 50
          minLength: 0
          type: string
          description: City name
          examples:
            - New York
        zipCode:
          maxLength: 10
          minLength: 0
          type: string
          description: Zip or postal code
          examples:
            - '10001'
        country:
          maxLength: 3
          type: string
          description: Country ISO code (3-letter)
          examples:
            - USA
      description: Address information
      x-apidog-orders:
        - addressLine1
        - addressLine2
        - city
        - zipCode
        - country
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    GeneralInformation:
      required:
        - receiptNumber
        - receiptType
        - systemTimestamp
      type: object
      properties:
        receiptType:
          type: string
          description: Type of receipt
          enum:
            - DIGITAL_RECEIPT
          examples:
            - DIGITAL RECEIPT
        systemTimestamp:
          type: string
          description: Timestamp of the system when the receipt was generated
          examples:
            - '2023-04-01T12:00:00Z'
        receiptNumber:
          type: string
          description: Unique number of the receipt
          examples:
            - REC-12345
        receiptNumberToBarcode:
          $ref: '#/components/schemas/ReceiptNumberToBarcode'
        freeText:
          maxLength: 300
          minLength: 0
          type: string
          description: Additional free text information
      description: General information about the receipt
      x-apidog-orders:
        - receiptType
        - systemTimestamp
        - receiptNumber
        - receiptNumberToBarcode
        - freeText
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    ReceiptNumberToBarcode:
      required:
        - applicationId
        - format
      type: object
      properties:
        format:
          pattern: >-
            ^(EAN(-13|-8)?|UPC(-A|-E)?|CODE(39|128)|ITF|QR|DATAMATRIX|PDF417|AZTEC)$
          type: string
          description: Format of the barcode
          enum:
            - EAN
            - EAN-13
            - EAN-8
            - UPC-A
            - UPC-E
            - CODE39
            - CODE128
            - ITF
            - QR
            - DATAMATRIX
            - PDF417
            - AZTEC
          examples:
            - QR
        applicationId:
          type: string
          description: Application ID for the barcode
          examples:
            - REC
      description: Barcode information for the receipt number
      x-apidog-orders:
        - format
        - applicationId
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    Header:
      required:
        - headerText
      type: object
      properties:
        headerText:
          maxLength: 300
          minLength: 0
          type: string
          description: Text to be displayed in the header
        merchantLogoUrl:
          type: string
          description: URL of the merchant's logo
          examples:
            - https://www.example.com/logo.png
      description: Header information for the receipt
      x-apidog-orders:
        - headerText
        - merchantLogoUrl
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    XReceipts:
      required:
        - cardholderReference
        - cashierSystemId
        - roundTripId
        - schemaVersion
      type: object
      properties:
        schemaVersion:
          pattern: ^\d+\.\d+$
          type: string
          description: Schema version for the request
          examples:
            - '1.0'
        cashierSystemId:
          pattern: ^\d{9}$
          type: string
          description: >-
            Cashier system ID (public VAT number of the company representing
            your cashier system)
          examples:
            - '123456789'
        roundTripId:
          type: string
          description: Round trip ID (UUID format)
          format: uuid
          examples:
            - 123e4567-e89b-12d3-a456-426614174000
        cardholderReference:
          type: string
          description: Cardholder reference (UUID format)
          format: uuid
          examples:
            - 123e4567-e89b-12d3-a456-426614174000
        cardholderMemberships:
          maxItems: 3
          minItems: 0
          type: array
          description: Cardholder memberships associated with the transaction
          items:
            $ref: '#/components/schemas/CardholderMembership'
      description: XReceipts information
      x-apidog-orders:
        - schemaVersion
        - cashierSystemId
        - roundTripId
        - cardholderReference
        - cardholderMemberships
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    CardholderMembership:
      required:
        - memberValue
        - memberValueProvider
        - memberValueType
      type: object
      properties:
        memberValue:
          maxLength: 50
          minLength: 0
          type: string
          description: Member value (typically the value of the memberValue Type)
          examples:
            - '12345678'
        memberValueType:
          type: string
          description: Type of member value
          enum:
            - MEMBER_NUMBER
            - REWARD_NUMBER
            - LOYALTY_NUMBER
          examples:
            - MEMBER_NUMBER
        memberValueProvider:
          maxLength: 100
          minLength: 0
          type: string
          description: >-
            Name of the loyalty or reward program associated with the member
            value
          examples:
            - OBOS
      description: Cardholder membership information
      x-apidog-orders:
        - memberValue
        - memberValueType
        - memberValueProvider
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    XApiResponse:
      type: object
      properties:
        roundTripId:
          type: string
        status:
          type: string
          enum:
            - OK_200
            - CREATED_201
            - PARTIAL_CONTENT_206
            - BAD_REQUEST_400
            - UNAUTHORIZED_401
            - FORBIDDEN_403
            - NOT_FOUND_404
            - METHOD_NOT_ALLOWED_405
            - CONFLICT_409
            - VALIDATION_ERROR_422
            - INTERNAL_SERVER_ERROR_500
        internalCode:
          type: string
        path:
          type: string
        method:
          type: string
        message:
          type: string
        data:
          type: object
          x-apidog-orders: []
          properties: {}
          x-apidog-ignore-properties: []
        metadata: &ref_8
          $ref: '#/components/schemas/XApiResponseMetadata'
      x-apidog-orders:
        - roundTripId
        - status
        - internalCode
        - path
        - method
        - message
        - data
        - metadata
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    XApiResponseMetadata:
      type: object
      properties:
        systemTimestamp:
          type: string
          format: date-time
      x-apidog-orders:
        - systemTimestamp
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    XApiResponseObject:
      type: object
      properties:
        roundTripId:
          type: string
        status:
          type: string
          enum:
            - OK_200
            - CREATED_201
            - PARTIAL_CONTENT_206
            - BAD_REQUEST_400
            - UNAUTHORIZED_401
            - FORBIDDEN_403
            - NOT_FOUND_404
            - METHOD_NOT_ALLOWED_405
            - CONFLICT_409
            - VALIDATION_ERROR_422
            - INTERNAL_SERVER_ERROR_500
        internalCode:
          type: string
        path:
          type: string
        method:
          type: string
        message:
          type: string
        data:
          type: object
          x-apidog-orders: []
          properties: {}
          x-apidog-ignore-properties: []
        metadata: *ref_8
      x-apidog-orders:
        - roundTripId
        - status
        - internalCode
        - path
        - method
        - message
        - data
        - metadata
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
  securitySchemes:
    apikey-header-x-api-key:
      type: apiKey
      in: header
      name: x-api-key
servers:
  - url: https://stg.xrr.receipts.no/ReceiveReceipt/api
    description: Production
  - url: https://stg.xcr.receipts.no/CardRecognition/api
    description: Staging
security:
  - apikey-header-x-api-key: []

```

Example:
curl --location --request POST 'https://stg.xcr.receipts.no/CardRecognition/api/putReceipt' \
--header 'Content-Type: application/json' \
--header 'x-api-key;' \
--data-raw '{
    "xReceipts": {
        "schemaVersion": "1.0",
        "cashierSystemId": "123456789",
        "roundTripId": "123e4567-e89b-12d3-a456-426614174000",
        "cardId": "123e4567-e89b-12d3-a456-426614174000",
        "cardholderMemberships": [
            {
                "memberValue": "12345678",
                "memberValueType": "MEMBER_NUMBER",
                "memberValueProvider": "OBOS"
            }
        ]
    },
    "header": {
        "headerText": "string",
        "merchantLogoUrl": "https://www.example.com/logo.png"
    },
    "generalInformation": {
        "receiptType": "DIGITAL_RECEIPT",
        "systemTimestamp": "2023-04-01T12:00:00Z",
        "receiptNumber": "REC-12345",
        "receiptNumberToBarcode": {
            "format": "EAN",
            "applicationId": "REC"
        },
        "freeText": "string"
    },
    "merchant": {
        "merchantName": "Maxbo Oslo",
        "merchantCompanyId": "123456789MVA",
        "branch": {
            "branchName": "Maxbo - Oslo",
            "slogan": "Welcome to Maxbo!",
            "email": "contact@maxbo.no",
            "phone": "+4740406060",
            "websiteUrl": "https://www.maxbo.no",
            "address": {
                "addressLine1": "123 Main St",
                "addressLine2": "Apt 4B",
                "city": "New York",
                "zipCode": "10001",
                "country": "USA"
            }
        }
    },
    "lineItems": [
        {
            "itemName": "Organic Banana",
            "itemDescription": "Fresh organic bananas from Ecuador",
            "itemIds": {
                "id": "PROD-12345",
                "ean": "5901234123457",
                "gtin": "00012345600012",
                "epd": "EPD123456"
            },
            "itemPrice": {
                "priceIncVat": 120,
                "priceExcVat": 100,
                "vatRate": 20,
                "vatAmount": 20
            },
            "itemQuantity": {
                "type": "PCS\"SINGLE\", \"PCS\", \"KG\"",
                "quantity": 2.5
            },
            "itemDiscount": {
                "amount": 10,
                "percentage": 10,
                "description": "string"
            },
            "itemSumTotal": 120,
            "itemMetadata": {
                "key": "colourCode",
                "value": "#C1C1C1"
            },
            "itemMetadataList": [
                {
                "key": "",
                "value": ""
                }
            ]
        }
    ],
    "orderSummary": {
        "currencyIsoCode": "USD",
        "totalAmountIncVat": 120,
        "totalAmountExcVat": 100,
        "vatSummary": [
            {
                "vatRate": 20,
                "vatAmount": 200
            }
        ]
    },
     "payment": [
    {
      "type": "CARD",
      "cardType": "BANKAXEPT",
      "maskedPan": "900426******1200",
      "acquirerTransactionTimestamp": "2025-01-09T12:57:00Z",
      "acquirerTerminalId": "04813694",
      "acquirerMerchantId": "111058",
      "transactionIdentifiers": {
        "authorizationCode": "002404"
      },
      "transactionAmount": {
        "merchantTransactionAmount": 50,
        "merchantTransactionCurrency": "NOK",
        "cardholderTransactionAmount": 50,
        "cardholderTransactionCurrency": "NOK"
      },
      "splitPayments": [
        {
          "type": "CARD",
          "cardType": "BANKAXEPT",
          "maskedPan": "900426******1200",
          "acquirerTransactionTimestamp": "2025-01-09T12:57:00Z",
          "acquirerTerminalId": "04813694",
          "acquirerMerchantId": "111058",
          "transactionIdentifiers": {
            "authorizationCode": "002403"
          },
          "transactionAmount": {
            "merchantTransactionAmount": 50,
            "merchantTransactionCurrency": "NOK",
            "cardholderTransactionAmount": 50,
            "cardholderTransactionCurrency": "NOK"
          }
        },
        {
          "amount": 40,
          "splitId": null,
          "type": "CASH"
        }
      ]
    }
  ],
    "qrCode": {
        "value": "https://example.com/receipt/123456",
        "valueEncoding": "UTF-8",
        "errorCorrectionLevel": "L"
    },
    "footerText": "string"
}'


Response 200 - Success

{
  "roundTripId": "123e4567-e89b-12d3-a456-426614174000",
  "status": "OK",
  "message": "Success",
  "data": "Receipt saved successfully"
}


4.
# Validate Digital Receipt

> This endpoint is used for development purposes only!
Function is to aid you in validating that the receipt object returned by your system to X-Receipts in production follows the requested format.

NB! "cardholderReference" will be changed to "cardId" 

## OpenAPI

```yaml
openapi: 3.0.1
info:
  title: ''
  description: ''
  version: 1.0.0
paths:
  /validate:
    post:
      summary: Validate Digital Receipt
      deprecated: false
      description: >-
        This endpoint is used for development purposes only!

        Function is to aid you in validating that the receipt object returned by
        your system to X-Receipts in production follows the requested format.


        NB! "cardholderReference" will be changed to "cardId" 
      operationId: validateReceipt
      tags:
        - XDRE Digital Receipt
        - XDRE
        - XECR
      parameters:
        - name: x-api-key
          in: header
          description: ''
          required: true
          example: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalReceipt'
            example:
              xReceipts:
                schemaVersion: '1.0'
                cashierSystemId: '123456789'
                roundTripId: 123e4567-e89b-12d3-a456-426614174000
                cardholderReference: This value will be changed to 'cardId'
                cardholderMemberships:
                  - memberValue: '12345678'
                    memberValueType: MEMBER_NUMBER
                    memberValueProvider: OBOS
              header:
                headerText: string
                merchantLogoUrl: https://www.example.com/logo.png
              generalInformation:
                receiptType: DIGITAL_RECEIPT
                systemTimestamp: '2023-04-01T12:00:00Z'
                receiptNumber: REC-12345
                receiptNumberToBarcode:
                  format: EAN
                  applicationId: REC
                freeText: string
              merchant:
                merchantName: Maxbo Oslo
                merchantCompanyId: 123456789MVA
                branch:
                  branchName: Maxbo - Oslo
                  slogan: Welcome to Maxbo!
                  email: contact@maxbo.no
                  phone: '+4740406060'
                  websiteUrl: https://www.maxbo.no
                  address:
                    addressLine1: 123 Main St
                    addressLine2: Apt 4B
                    city: New York
                    zipCode: '10001'
                    country: USA
              lineItems:
                - itemName: Organic Banana
                  itemDescription: Fresh organic bananas from Ecuador
                  itemIds:
                    id: PROD-12345
                    ean: '5901234123457'
                    gtin: '00012345600012'
                    epd: EPD123456
                  itemPrice:
                    priceIncVat: 120
                    priceExcVat: 100
                    vatRate: 20
                    vatAmount: 20
                  itemQuantity:
                    type: PCS"SINGLE", "PCS", "KG"
                    quantity: 2.5
                  itemDiscount:
                    amount: 10
                    percentage: 10
                    description: string
                  itemSumTotal: 120
                  itemMetadata:
                    key: colourCode
                    value: '#C1C1C1'
                  itemMetadataList:
                    - key: colourCode
                      value: '#C1C1C1'
              orderSummary:
                orderDiscount: 50
                currencyIsoCode: USD
                totalAmountIncVat: 120
                totalAmountExcVat: 100
                vatSummary:
                  - vatRate: 20
                    vatAmount: 200
              payment:
                - type: CARD
                  cardType: BANKAXEPT
                  maskedPan: 900426******1200
                  acquirerTransactionTimestamp: '2025-01-09T12:57:00Z'
                  acquirerTerminalId: '04813694'
                  acquirerMerchantId: '111058'
                  transactionIdentifiers:
                    authorizationCode: '002404'
                  transactionAmount:
                    merchantTransactionAmount: 50
                    merchantTransactionCurrency: NOK
                    cardholderTransactionAmount: 50
                    cardholderTransactionCurrency: NOK
                    tipAmount: 10
                  splitPayments:
                    - type: CARD
                      cardType: BANKAXEPT
                      maskedPan: 900426******1200
                      acquirerTransactionTimestamp: '2025-01-09T12:57:00Z'
                      acquirerTerminalId: '04813694'
                      acquirerMerchantId: '111058'
                      transactionIdentifiers:
                        authorizationCode: '002403'
                      transactionAmount:
                        merchantTransactionAmount: 50
                        merchantTransactionCurrency: NOK
                        cardholderTransactionAmount: 50
                        cardholderTransactionCurrency: NOK
                    - amount: 40
                      splitId: null
                      type: CASH
              qrCode:
                value: https://example.com/receipt/123456
                valueEncoding: UTF-8
                errorCorrectionLevel: L
              footerText: string
      responses:
        '200':
          description: Receipt validation successful
          content:
            application/json:
              schema: &ref_0
                $ref: '#/components/schemas/ValidationResponse'
              example:
                valid: true
                errors: []
          headers: {}
          x-apidog-name: OK
        '400':
          description: Invalid receipt data
          content:
            application/json:
              schema: *ref_0
              example:
                valid: false
                errors:
                  - field: xReceipts.cashierSystemId
                    message: Cashier System Id must be a 9-digit number
                    invalidValue: '123'
          headers: {}
          x-apidog-name: Bad Request
        '403':
          description: Forbidden
          content:
            '*/*':
              schema: &ref_1
                $ref: '#/components/schemas/XApiResponseObject'
          headers: {}
          x-apidog-name: Forbidden
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                oneOf:
                  - type: string
                  - *ref_1
          headers: {}
          x-apidog-name: Record Not Found
        '409':
          description: Conflict
          content:
            '*/*':
              schema: *ref_1
          headers: {}
          x-apidog-name: '409'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema: *ref_1
          headers: {}
          x-apidog-name: Server Error
      security:
        - apikey-header-x-api-key: []
      x-api-version:
        - '1.0'
      x-api-id: XDRE-1
      x-apidog-folder: XDRE Digital Receipt
      x-apidog-status: released
      x-run-in-apidog: https://app.apidog.com/web/project/443197/apis/api-13007806-run
components:
  schemas:
    DigitalReceipt:
      required:
        - generalInformation
        - lineItems
        - merchant
        - orderSummary
        - payment
        - xReceipts
      type: object
      properties:
        xReceipts:
          $ref: '#/components/schemas/XReceipts'
        header:
          $ref: '#/components/schemas/Header'
        generalInformation:
          $ref: '#/components/schemas/GeneralInformation'
        merchant:
          $ref: '#/components/schemas/Merchant'
        lineItems:
          maxItems: 2147483647
          minItems: 1
          type: array
          description: List of line items in the receipt
          items:
            type: object
            x-apidog-refs:
              01JNS29WZH3KEYETPD317K7PPZ:
                $ref: '#/components/schemas/LineItem'
                x-apidog-overrides: {}
            properties:
              itemName:
                type: string
                description: Name of the item
                examples:
                  - Organic Banana
              itemDescription:
                maxLength: 100
                minLength: 0
                type: string
                description: Description of the item
                examples:
                  - Fresh organic bananas from Ecuador
              itemIds: &ref_2
                $ref: '#/components/schemas/ItemIds'
              itemPrice: &ref_3
                $ref: '#/components/schemas/ItemPrice'
              itemQuantity: &ref_4
                $ref: '#/components/schemas/ItemQuantity'
              itemDiscount: &ref_5
                $ref: '#/components/schemas/ItemDiscount'
              itemSumTotal:
                type: number
                description: Total sum for this line item incl VAT
                format: double
                examples:
                  - 120
              itemMetadata: &ref_6
                $ref: '#/components/schemas/ItemMetadata1'
                description: >-
                  Additional metadata for the item introducing an open Key:Value
                  Object
              itemMetadataList:
                type: array
                items: &ref_7
                  $ref: '#/components/schemas/ItemMetadata'
                description: >-
                  Additional metadata for the item introducing an open Key:Value
                  List
            x-apidog-orders:
              - 01JNS29WZH3KEYETPD317K7PPZ
            required:
              - itemName
              - itemIds
              - itemPrice
              - itemQuantity
              - itemSumTotal
              - itemMetadataList
            x-apidog-ignore-properties:
              - itemName
              - itemDescription
              - itemIds
              - itemPrice
              - itemQuantity
              - itemDiscount
              - itemSumTotal
              - itemMetadata
              - itemMetadataList
        orderSummary:
          $ref: '#/components/schemas/OrderSummary'
        payment:
          maxItems: 2147483647
          minItems: 1
          type: array
          description: List of payment information
          items:
            $ref: '#/components/schemas/CardPayment'
        qrCode:
          $ref: '#/components/schemas/QrCode'
        cuopons:
          type: array
          items:
            $ref: '#/components/schemas/X-Coupon'
        footerText:
          maxLength: 300
          minLength: 0
          type: string
          description: Footer text of the receipt
      description: Digital receipt information
      x-apidog-orders:
        - xReceipts
        - header
        - generalInformation
        - merchant
        - lineItems
        - orderSummary
        - payment
        - qrCode
        - cuopons
        - footerText
      x-apidog-refs: {}
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    X-Coupon:
      title: X-Coupon
      description: JSON Schema for a universal coupon/voucher
      type: object
      required:
        - id
        - uuid
        - type
        - name
        - description
        - discount
        - validity
        - channels
      properties:
        id:
          type: string
          description: Unique identifier for the coupon
          minLength: 3
          maxLength: 50
          examples:
            - SUMMER2025
          pattern: ^[A-Z0-9_-]+$
        uuid:
          type: string
          description: External unique identifier for the coupon
          format: uuid
          examples:
            - 123e4567-e89b-12d3-a456-426614174000
        type:
          type: string
          description: Type of coupon
          enum:
            - DISCOUNT
            - CASHBACK
            - GIFT
            - BUY_ONE_GET_ONE
            - BONUS_POINTS
          examples:
            - DISCOUNT
        name:
          type: string
          description: Display name for the coupon
          minLength: 3
          maxLength: 100
          examples:
            - Summer Sale 2025
        description:
          type: string
          description: Detailed description of what the coupon offers
          minLength: 5
          maxLength: 500
          examples:
            - Get 25% off on all summer products
        imageUrl:
          type: string
          description: URL to the coupon image
          format: uri
          examples:
            - https://example.com/images/summer-sale.png
        discount:
          type: object
          description: Discount information
          required:
            - value
            - type
          properties:
            value:
              type: number
              description: Amount of discount
              minimum: 0
              exclusiveMinimum: true
              examples:
                - 25
            type:
              type: string
              description: Type of discount
              enum:
                - PERCENTAGE
                - FIXED_AMOUNT
                - FREE_ITEM
              examples:
                - PERCENTAGE
            maxDiscountAmount:
              type: number
              description: Optional cap on discount amount
              minimum: 0
              examples:
                - 50
            minPurchaseAmount:
              type: number
              description: Minimum purchase required (if any)
              minimum: 0
              examples:
                - 100
            currency:
              type: string
              description: Currency for amounts
              enum:
                - NOK
                - SEK
                - DNK
                - USD
                - GDP
                - EUR
              examples:
                - USD
            appliesTo:
              type: object
              description: Rules for what products the discount applies to
              required:
                - scope
              properties:
                scope:
                  type: string
                  description: Scope of applicability
                  enum:
                    - ALL_ITEMS
                    - SPECIFIC_ITEMS
                    - CATEGORIES
                  examples:
                    - SPECIFIC_ITEMS
                items:
                  type: array
                  description: Specific item SKUs this applies to
                  items:
                    type: string
                    minLength: 1
                    maxLength: 100
                  examples:
                    - - SKU123
                      - SKU456
                categories:
                  type: array
                  description: Categories this applies to
                  items:
                    type: string
                    minLength: 1
                    maxLength: 100
                  examples:
                    - - SUMMER_WEAR
                excludedItems:
                  type: array
                  description: Specific item SKUs that are excluded
                  items:
                    type: string
                    minLength: 1
                    maxLength: 100
                  examples:
                    - - SKU789
                excludedCategories:
                  type: array
                  description: Categories that are excluded
                  items:
                    type: string
                    enum:
                      - ON_SALE
                      - NEW_RELEASE
                  examples:
                    - - ON_SALE
              x-apidog-orders:
                - scope
                - items
                - categories
                - excludedItems
                - excludedCategories
              x-apidog-ignore-properties: []
          x-apidog-orders:
            - value
            - type
            - maxDiscountAmount
            - minPurchaseAmount
            - currency
            - appliesTo
          x-apidog-ignore-properties: []
        validity:
          type: object
          description: Validity period for the coupon
          required:
            - startDate
            - endDate
          properties:
            startDate:
              type: string
              description: Start date and time of validity period
              format: date-time
              examples:
                - '2025-06-01T00:00:00Z'
            endDate:
              type: string
              description: End date and time of validity period
              format: date-time
              examples:
                - '2025-08-31T23:59:59Z'
            timezone:
              type: string
              description: Timezone for validity period
              examples:
                - UTC
            validDays:
              type: array
              description: Specific days of week when the coupon is valid
              items:
                type: string
                enum:
                  - monday
                  - tuesday
                  - wednesday
                  - thursday
                  - friday
                  - saturday
                  - sunday
              examples:
                - - monday
                  - tuesday
                  - wednesday
                  - thursday
                  - friday
            validHours:
              type: object
              description: Specific hours of day when the coupon is valid
              required:
                - start
                - end
              properties:
                start:
                  type: string
                  description: Start time in 24-hour format
                  pattern: ^([01]?[0-9]|2[0-3]):[0-5][0-9]$
                  examples:
                    - '09:00'
                end:
                  type: string
                  description: End time in 24-hour format
                  pattern: ^([01]?[0-9]|2[0-3]):[0-5][0-9]$
                  examples:
                    - '18:00'
              x-apidog-orders:
                - start
                - end
              x-apidog-ignore-properties: []
          x-apidog-orders:
            - startDate
            - endDate
            - timezone
            - validDays
            - validHours
          x-apidog-ignore-properties: []
        channels:
          type: object
          description: Redemption channels for the coupon
          properties:
            online:
              type: boolean
              description: Whether the coupon can be redeemed online
              examples:
                - true
            inStore:
              type: boolean
              description: Whether the coupon can be redeemed in-store
              examples:
                - false
            app:
              type: boolean
              description: Whether the coupon can be redeemed in app
              examples:
                - true
          x-apidog-orders:
            - online
            - inStore
            - app
          x-apidog-ignore-properties: []
        redemptionMethod:
          type: object
          description: Method for redeeming the coupon
          properties:
            linkedPaymentCard:
              type: boolean
              description: Whether user must use the linked payment card
              examples:
                - true
            cardId:
              type: string
              description: The unique id for the payment card
              format: uuid
              examples:
                - 123e4567-e89b-12d3-a456-426614174000
          x-apidog-orders:
            - linkedPaymentCard
            - cardId
          required:
            - linkedPaymentCard
            - cardId
          x-apidog-ignore-properties: []
        buyOneGetOne:
          type: object
          description: Details for Buy One Get One (BOGO) type offers
          required:
            - buyQuantity
            - getQuantity
            - value
            - type
          properties:
            buyQuantity:
              type: integer
              description: Quantity that must be purchased
              minimum: 1
              examples:
                - 2
            getQuantity:
              type: integer
              description: Quantity that will be discounted
              minimum: 1
              examples:
                - 1
            buyItems:
              type: array
              description: Items that must be purchased
              items:
                type: string
                minLength: 1
                maxLength: 100
              examples:
                - - SKU123
            getItems:
              type: array
              description: Items that are free/discounted
              items:
                type: string
                minLength: 1
                maxLength: 100
              examples:
                - - SKU456
            value:
              type: number
              description: Amount of discount for BOGO items
              minimum: 0
              exclusiveMinimum: true
              examples:
                - 100
            type:
              type: string
              description: Type of discount for BOGO items
              enum:
                - PERCENTAGE
                - FIXED_AMOUNT
                - FREE_ITEM
              examples:
                - PERCENTAGE
          x-apidog-orders:
            - buyQuantity
            - getQuantity
            - buyItems
            - getItems
            - value
            - type
          x-apidog-ignore-properties: []
      x-apidog-orders:
        - id
        - uuid
        - type
        - name
        - description
        - imageUrl
        - discount
        - validity
        - channels
        - redemptionMethod
        - buyOneGetOne
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    QrCode:
      required:
        - errorCorrectionLevel
        - value
        - valueEncoding
      type: object
      properties:
        value:
          type: string
          description: QR Code value (typically a URL)
          examples:
            - https://example.com/receipt/123456
        valueEncoding:
          type: string
          description: Encoding method for the QR Code
          enum:
            - UTF-8
            - UTF-16
            - ISO-8859-1
            - SHIFT_JIS
            - ASCII
          examples:
            - UTF-8
        errorCorrectionLevel:
          type: string
          description: Error correction level
          enum:
            - L
            - M
            - Q
            - H
            - L
            - M
            - Q
            - H
          examples:
            - M
      description: QR Code information
      x-apidog-orders:
        - value
        - valueEncoding
        - errorCorrectionLevel
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    CardPayment:
      description: Card payment information
      allOf:
        - $ref: '#/components/schemas/Payment'
        - type: object
          properties:
            cardType:
              type: string
              description: Type of card used for payment
              enum:
                - BANKAXEPT
                - VISA
                - MASTERCARD
                - UNKNOWN
              examples:
                - VISA
              x-apidog-enum:
                - value: BANKAXEPT
                  name: ''
                  description: ''
                - value: VISA
                  name: ''
                  description: ''
                - value: MASTERCARD
                  name: ''
                  description: ''
                - value: UNKNOWN
                  name: ''
                  description: ''
            maskedPan:
              pattern: ^[*\d]{4,19}$
              type: string
              description: Masked PAN (Primary Account Number)
              examples:
                - '****1234'
            acquirerTransactionTimestamp:
              type: string
              description: Timestamp of the acquirer transaction
              examples:
                - '2023-04-01T12:00:00Z'
            acquirerTerminalId:
              type: string
              description: Acquirer terminal ID
              examples:
                - '123456'
              minLength: 1
              maxLength: 15
            acquirerMerchantId:
              pattern: ^\d{6,15}$
              type: string
              description: Acquirer merchant ID
              examples:
                - '789012'
            transactionIdentifiers:
              $ref: '#/components/schemas/TransactionIdentifiers'
            transactionAmount:
              $ref: '#/components/schemas/TransactionAmount'
            transactionRawText:
              maxLength: 300
              minLength: 1
              type: string
              description: Raw transaction text
            terminalProvider:
              type: string
              description: Terminal provider
              enum:
                - VERIFONE
                - NETS
                - PAX
                - ADYEN
                - PAYEX
                - SWEDBANK
                - SUMUP
                - UNKNOWN
          x-apidog-orders:
            - cardType
            - maskedPan
            - acquirerTransactionTimestamp
            - acquirerTerminalId
            - acquirerMerchantId
            - transactionIdentifiers
            - transactionAmount
            - transactionRawText
            - terminalProvider
          x-apidog-ignore-properties: []
      x-apidog-orders: []
      x-apidog-folder: ''
    TransactionAmount:
      required:
        - merchantTransactionAmount
        - merchantTransactionCurrency
      type: object
      properties:
        merchantTransactionAmount:
          type: number
          description: |
            Transaction amount in merchant's local currency.
            - Must not be zero
            - Can be positive (charges) or negative (refunds)
            - Represents the actual amount charged at the terminal
          format: double
          examples:
            - 100
        merchantTransactionCurrency:
          pattern: ^[A-Z]{3}$
          type: string
          description: |
            ISO 4217 currency code for merchant's transaction.
            Must be a valid 3-letter currency code.
          examples:
            - NOK
        cardholderTransactionAmount:
          type: number
          description: |
            Transaction amount in cardholder's local currency.
            - Must not be zero
            - Can be positive (charges) or negative (refunds)
            - Represents the actual amount charged at the terminal
          format: double
          examples:
            - 100
        cardholderTransactionCurrency:
          pattern: ^[A-Z]{3}$
          type: string
          description: |
            ISO 4217 currency code for merchant's transaction.
            Must be a valid 3-letter currency code.
          examples:
            - SEK
        tipAmount:
          type: number
          format: double
          description: The tip amount
      description: >
        Transaction amount information containing both merchant and cardholder
        amounts.

        Supports multi-currency transactions where merchant and cardholder
        currencies differ.

        All amounts can be positive or negative but cannot be zero.
      x-apidog-orders:
        - merchantTransactionAmount
        - merchantTransactionCurrency
        - cardholderTransactionAmount
        - cardholderTransactionCurrency
        - tipAmount
      examples:
        - merchantTransactionAmount: 100
          merchantTransactionCurrency: NOK
          cardholderTransactionAmount: 95.5
          cardholderTransactionCurrency: SEK
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    TransactionIdentifiers:
      type: object
      properties:
        authorizationCode:
          maxLength: 6
          minLength: 6
          pattern: ^\d{6}$
          type: string
          description: Authorization code for the transaction
          examples:
            - '009856'
        systemTraceAuditNumber:
          maxLength: 6
          minLength: 6
          pattern: ^\d{6,12}$
          type: string
          description: System Trace Audit Number (STAN) for the transaction
          examples:
            - '986585'
        retrievalReferenceNumber:
          maxLength: 12
          minLength: 12
          pattern: ^\d{6,12}$
          type: string
          description: Retrieval Reference Number for the transaction
          examples:
            - '20240532009856'
        transactionReference:
          maxLength: 20
          type: string
          description: Optional Transaction Reference
          examples:
            - TR123456789
      description: Transaction unique identifiers
      x-apidog-orders:
        - authorizationCode
        - systemTraceAuditNumber
        - retrievalReferenceNumber
        - transactionReference
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    Payment:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          description: Type of payment
          enum:
            - CARD
            - CASH
            - VIPPS
            - GIFT_CARD
          examples:
            - CARD
        splitPayment:
          type: array
          description: Split Payment Information
          items:
            $ref: '#/components/schemas/SplitPayment'
      description: Payment information
      discriminator:
        propertyName: type
      x-apidog-orders:
        - type
        - splitPayment
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    SplitPayment:
      required:
        - type
      type: object
      properties:
        splitId:
          type: string
          description: Identifier for this part of the split payment
          examples:
            - SPLIT-001
        type:
          type: string
          description: Type of payment
          enum:
            - CARD
            - CASH
            - VIPPS
          examples:
            - CASH
      description: Split payment information
      x-apidog-orders:
        - splitId
        - type
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    OrderSummary:
      required:
        - totalAmountExcVat
        - totalAmountIncVat
        - vatSummary
      type: object
      properties:
        orderDiscount:
          type: number
          description: Order discount
          format: double
          examples:
            - 200
        currencyIsoCode:
          pattern: ^[A-Z]{2,3}$
          type: string
          description: ISO 4217 currency code
          examples:
            - USD
        totalAmountIncVat:
          type: number
          description: Total amount including VAT
          format: double
          examples:
            - 120
        totalAmountExcVat:
          type: number
          description: Total amount excluding VAT
          format: double
          examples:
            - 100
        vatSummary:
          maxItems: 2147483647
          minItems: 1
          type: array
          description: Summary of VAT amounts
          items:
            $ref: '#/components/schemas/VatSummary'
      description: Summary of the order
      x-apidog-orders:
        - orderDiscount
        - currencyIsoCode
        - totalAmountIncVat
        - totalAmountExcVat
        - vatSummary
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    VatSummary:
      required:
        - vatAmount
        - vatRate
      type: object
      properties:
        vatRate:
          maximum: 100
          minimum: 0
          type: number
          description: VAT rate in % applied to the item
          format: double
          examples:
            - 20
        vatAmount:
          type: number
          description: VAT amount
          format: double
          examples:
            - 200
      description: VAT summary information
      x-apidog-orders:
        - vatRate
        - vatAmount
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    ItemMetadata:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
          description: Metadata key
          examples:
            - colourCode
        value:
          type: string
          description: Metadata key
          examples:
            - '#C1C1C1'
      description: Build your own metadata object
      x-apidog-orders:
        - key
        - value
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    ItemMetadata1:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
          description: Metadata key
          examples:
            - colourCode
        value:
          type: string
          description: Metadata key
          examples:
            - '#C1C1C1'
      description: Build your own metadata object
      x-apidog-orders:
        - key
        - value
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    ItemDiscount:
      required:
        - amount
        - percentage
      type: object
      properties:
        amount:
          type: number
          description: Discounted amount
          format: double
          examples:
            - 10
        percentage:
          maximum: 100
          minimum: 0
          type: number
          description: Discounted percentage
          format: double
          examples:
            - 10
        description:
          maxLength: 100
          minLength: 0
          type: string
          description: Description of the discount
      description: Discount information for an item
      x-apidog-orders:
        - amount
        - percentage
        - description
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    ItemQuantity:
      required:
        - quantity
        - type
      type: object
      properties:
        type:
          type: string
          description: Type of quantity measurement
          examples:
            - PCS"SINGLE", "PCS", "KG"
        quantity:
          type: number
          description: Quantity of the item
          format: double
          examples:
            - 2.5
      description: Quantity information for an item
      x-apidog-orders:
        - type
        - quantity
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    ItemPrice:
      required:
        - priceExcVat
        - priceIncVat
        - vatAmount
        - vatRate
      type: object
      properties:
        priceIncVat:
          type: number
          description: Item price including VAT
          format: double
          examples:
            - 120
        priceExcVat:
          type: number
          description: Item price excluding VAT
          format: double
          examples:
            - 100
        vatRate:
          maximum: 100
          minimum: 0
          type: number
          description: VAT rate in % applied to the item
          format: double
          examples:
            - 20
        vatAmount:
          type: number
          description: VAT amount for the item
          format: double
          examples:
            - 20
      description: Price information for an item
      x-apidog-orders:
        - priceIncVat
        - priceExcVat
        - vatRate
        - vatAmount
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    ItemIds:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Item or Product ID
          examples:
            - PROD-12345
        ean:
          pattern: ^(\d{8}|\d{13}|\d{14})$
          type: string
          description: EAN (European Article Number)
          examples:
            - '5901234123457'
        gtin:
          pattern: ^(\d{8}|\d{12,14})$
          type: string
          description: GTIN (Global Trade Item Number)
          examples:
            - '00012345600012'
        epd:
          type: string
          description: EPD (Electronic Product Code)
          examples:
            - EPD123456
      description: Identification information for an item
      x-apidog-orders:
        - id
        - ean
        - gtin
        - epd
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    LineItem:
      required:
        - itemIds
        - itemName
        - itemPrice
        - itemQuantity
        - itemSumTotal
        - itemMetadataList
      type: object
      properties:
        itemName:
          type: string
          description: Name of the item
          examples:
            - Organic Banana
        itemDescription:
          maxLength: 100
          minLength: 0
          type: string
          description: Description of the item
          examples:
            - Fresh organic bananas from Ecuador
        itemIds: *ref_2
        itemPrice: *ref_3
        itemQuantity: *ref_4
        itemDiscount: *ref_5
        itemSumTotal:
          type: number
          description: Total sum for this line item incl VAT
          format: double
          examples:
            - 120
        itemMetadata: *ref_6
        itemMetadataList:
          type: array
          items: *ref_7
          description: Additional metadata for the item introducing an open Key:Value List
      description: Information for a single line item in the receipt
      x-apidog-orders:
        - itemName
        - itemDescription
        - itemIds
        - itemPrice
        - itemQuantity
        - itemDiscount
        - itemSumTotal
        - itemMetadata
        - itemMetadataList
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    Merchant:
      required:
        - branch
        - merchantName
      type: object
      properties:
        merchantName:
          type: string
          description: Name of the merchant
          examples:
            - Maxbo Oslo
        merchantCompanyId:
          type: string
          description: >-
            Company ID of the merchant (digits, optionally followed by 2-4
            uppercase letters)
          examples:
            - 123456789MVA
        branch:
          $ref: '#/components/schemas/Branch'
      description: Information about the merchant
      x-apidog-orders:
        - merchantName
        - merchantCompanyId
        - branch
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    Branch:
      required:
        - address
      type: object
      properties:
        branchName:
          maxLength: 50
          minLength: 0
          type: string
          description: Name of the branch
          examples:
            - Maxbo - Oslo
        slogan:
          maxLength: 100
          minLength: 0
          type: string
          description: Branch slogan
          examples:
            - Welcome to Maxbo!
        email:
          type: string
          description: Branch email address
          examples:
            - contact@maxbo.no
        phone:
          type: string
          description: Branch phone number
          examples:
            - '+4740406060'
        websiteUrl:
          type: string
          description: Branch website URL
          examples:
            - https://www.maxbo.no
        address:
          $ref: '#/components/schemas/Address'
      description: Branch information
      x-apidog-orders:
        - branchName
        - slogan
        - email
        - phone
        - websiteUrl
        - address
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    Address:
      required:
        - addressLine1
      type: object
      properties:
        addressLine1:
          maxLength: 50
          minLength: 0
          type: string
          description: First line of the address
          examples:
            - 123 Main St
        addressLine2:
          maxLength: 50
          minLength: 0
          type: string
          description: Second line of the address
          examples:
            - Apt 4B
        city:
          maxLength: 50
          minLength: 0
          type: string
          description: City name
          examples:
            - New York
        zipCode:
          maxLength: 10
          minLength: 0
          type: string
          description: Zip or postal code
          examples:
            - '10001'
        country:
          maxLength: 3
          type: string
          description: Country ISO code (3-letter)
          examples:
            - USA
      description: Address information
      x-apidog-orders:
        - addressLine1
        - addressLine2
        - city
        - zipCode
        - country
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    GeneralInformation:
      required:
        - receiptNumber
        - receiptType
        - systemTimestamp
      type: object
      properties:
        receiptType:
          type: string
          description: Type of receipt
          enum:
            - DIGITAL_RECEIPT
          examples:
            - DIGITAL RECEIPT
        systemTimestamp:
          type: string
          description: Timestamp of the system when the receipt was generated
          examples:
            - '2023-04-01T12:00:00Z'
        receiptNumber:
          type: string
          description: Unique number of the receipt
          examples:
            - REC-12345
        receiptNumberToBarcode:
          $ref: '#/components/schemas/ReceiptNumberToBarcode'
        freeText:
          maxLength: 300
          minLength: 0
          type: string
          description: Additional free text information
      description: General information about the receipt
      x-apidog-orders:
        - receiptType
        - systemTimestamp
        - receiptNumber
        - receiptNumberToBarcode
        - freeText
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    ReceiptNumberToBarcode:
      required:
        - applicationId
        - format
      type: object
      properties:
        format:
          pattern: >-
            ^(EAN(-13|-8)?|UPC(-A|-E)?|CODE(39|128)|ITF|QR|DATAMATRIX|PDF417|AZTEC)$
          type: string
          description: Format of the barcode
          enum:
            - EAN
            - EAN-13
            - EAN-8
            - UPC-A
            - UPC-E
            - CODE39
            - CODE128
            - ITF
            - QR
            - DATAMATRIX
            - PDF417
            - AZTEC
          examples:
            - QR
        applicationId:
          type: string
          description: Application ID for the barcode
          examples:
            - REC
      description: Barcode information for the receipt number
      x-apidog-orders:
        - format
        - applicationId
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    Header:
      required:
        - headerText
      type: object
      properties:
        headerText:
          maxLength: 300
          minLength: 0
          type: string
          description: Text to be displayed in the header
        merchantLogoUrl:
          type: string
          description: URL of the merchant's logo
          examples:
            - https://www.example.com/logo.png
      description: Header information for the receipt
      x-apidog-orders:
        - headerText
        - merchantLogoUrl
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    XReceipts:
      required:
        - cardholderReference
        - cashierSystemId
        - roundTripId
        - schemaVersion
      type: object
      properties:
        schemaVersion:
          pattern: ^\d+\.\d+$
          type: string
          description: Schema version for the request
          examples:
            - '1.0'
        cashierSystemId:
          pattern: ^\d{9}$
          type: string
          description: >-
            Cashier system ID (public VAT number of the company representing
            your cashier system)
          examples:
            - '123456789'
        roundTripId:
          type: string
          description: Round trip ID (UUID format)
          format: uuid
          examples:
            - 123e4567-e89b-12d3-a456-426614174000
        cardholderReference:
          type: string
          description: Cardholder reference (UUID format)
          format: uuid
          examples:
            - 123e4567-e89b-12d3-a456-426614174000
        cardholderMemberships:
          maxItems: 3
          minItems: 0
          type: array
          description: Cardholder memberships associated with the transaction
          items:
            $ref: '#/components/schemas/CardholderMembership'
      description: XReceipts information
      x-apidog-orders:
        - schemaVersion
        - cashierSystemId
        - roundTripId
        - cardholderReference
        - cardholderMemberships
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    CardholderMembership:
      required:
        - memberValue
        - memberValueProvider
        - memberValueType
      type: object
      properties:
        memberValue:
          maxLength: 50
          minLength: 0
          type: string
          description: Member value (typically the value of the memberValue Type)
          examples:
            - '12345678'
        memberValueType:
          type: string
          description: Type of member value
          enum:
            - MEMBER_NUMBER
            - REWARD_NUMBER
            - LOYALTY_NUMBER
          examples:
            - MEMBER_NUMBER
        memberValueProvider:
          maxLength: 100
          minLength: 0
          type: string
          description: >-
            Name of the loyalty or reward program associated with the member
            value
          examples:
            - OBOS
      description: Cardholder membership information
      x-apidog-orders:
        - memberValue
        - memberValueType
        - memberValueProvider
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    ValidationResponse:
      type: object
      properties:
        valid:
          type: boolean
          description: Whether the validation was successful
          examples:
            - true
        errors:
          type: array
          description: List of validation errors, empty if validation was successful
          items:
            $ref: '#/components/schemas/ValidationError'
      description: Validation response containing validation result and any errors
      x-apidog-orders:
        - valid
        - errors
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    ValidationError:
      type: object
      properties:
        field:
          type: string
          description: Field path where the validation error occurred
          examples:
            - xReceipts.cashierSystemId
        message:
          type: string
          description: Validation error message
          examples:
            - Cashier System Id must be a 9-digit number
        invalidValue:
          type: string
          description: The invalid value that caused the validation error
          examples:
            - '123'
      description: Details about Receipt validation error
      x-apidog-orders:
        - field
        - message
        - invalidValue
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    XApiResponseObject:
      type: object
      properties:
        roundTripId:
          type: string
        status:
          type: string
          enum:
            - OK_200
            - CREATED_201
            - PARTIAL_CONTENT_206
            - BAD_REQUEST_400
            - UNAUTHORIZED_401
            - FORBIDDEN_403
            - NOT_FOUND_404
            - METHOD_NOT_ALLOWED_405
            - CONFLICT_409
            - VALIDATION_ERROR_422
            - INTERNAL_SERVER_ERROR_500
        internalCode:
          type: string
        path:
          type: string
        method:
          type: string
        message:
          type: string
        data:
          type: object
          x-apidog-orders: []
          properties: {}
          x-apidog-ignore-properties: []
        metadata:
          $ref: '#/components/schemas/XApiResponseMetadata'
      x-apidog-orders:
        - roundTripId
        - status
        - internalCode
        - path
        - method
        - message
        - data
        - metadata
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
    XApiResponseMetadata:
      type: object
      properties:
        systemTimestamp:
          type: string
          format: date-time
      x-apidog-orders:
        - systemTimestamp
      x-apidog-ignore-properties: []
      x-apidog-folder: ''
  securitySchemes:
    apikey-header-x-api-key:
      type: apiKey
      in: header
      name: x-api-key
servers:
  - url: https://stg.xrr.receipts.no/ReceiveReceipt/api
    description: Production
  - url: https://stg.xcr.receipts.no/CardRecognition/api
    description: Staging
security:
  - apikey-header-x-api-key: []

```

Example:
curl --location --request POST 'https://stg.xcr.receipts.no/CardRecognition/api/validate' \
--header 'Content-Type: application/json' \
--header 'x-api-key;' \
--data-raw '{
    "xReceipts": {
        "schemaVersion": "1.0",
        "cashierSystemId": "123456789",
        "roundTripId": "123e4567-e89b-12d3-a456-426614174000",
        "cardholderReference": "This value will be changed to '\''cardId'\''",
        "cardholderMemberships": [
            {
                "memberValue": "12345678",
                "memberValueType": "MEMBER_NUMBER",
                "memberValueProvider": "OBOS"
            }
        ]
    },
    "header": {
        "headerText": "string",
        "merchantLogoUrl": "https://www.example.com/logo.png"
    },
    "generalInformation": {
        "receiptType": "DIGITAL_RECEIPT",
        "systemTimestamp": "2023-04-01T12:00:00Z",
        "receiptNumber": "REC-12345",
        "receiptNumberToBarcode": {
            "format": "EAN",
            "applicationId": "REC"
        },
        "freeText": "string"
    },
    "merchant": {
        "merchantName": "Maxbo Oslo",
        "merchantCompanyId": "123456789MVA",
        "branch": {
            "branchName": "Maxbo - Oslo",
            "slogan": "Welcome to Maxbo!",
            "email": "contact@maxbo.no",
            "phone": "+4740406060",
            "websiteUrl": "https://www.maxbo.no",
            "address": {
                "addressLine1": "123 Main St",
                "addressLine2": "Apt 4B",
                "city": "New York",
                "zipCode": "10001",
                "country": "USA"
            }
        }
    },
    "lineItems": [
        {
            "itemName": "Organic Banana",
            "itemDescription": "Fresh organic bananas from Ecuador",
            "itemIds": {
                "id": "PROD-12345",
                "ean": "5901234123457",
                "gtin": "00012345600012",
                "epd": "EPD123456"
            },
            "itemPrice": {
                "priceIncVat": 120,
                "priceExcVat": 100,
                "vatRate": 20,
                "vatAmount": 20
            },
            "itemQuantity": {
                "type": "PCS\"SINGLE\", \"PCS\", \"KG\"",
                "quantity": 2.5
            },
            "itemDiscount": {
                "amount": 10,
                "percentage": 10,
                "description": "string"
            },
            "itemSumTotal": 120,
            "itemMetadata": {
                "key": "colourCode",
                "value": "#C1C1C1"
            },
            "itemMetadataList": [
                {
                    "key": "colourCode",
                    "value": "#C1C1C1"
                }
            ]
        }
    ],
    "orderSummary": {
        "orderDiscount": 50,
        "currencyIsoCode": "USD",
        "totalAmountIncVat": 120,
        "totalAmountExcVat": 100,
        "vatSummary": [
            {
                "vatRate": 20,
                "vatAmount": 200
            }
        ]
    },
     "payment": [
    {
      "type": "CARD",
      "cardType": "BANKAXEPT",
      "maskedPan": "900426******1200",
      "acquirerTransactionTimestamp": "2025-01-09T12:57:00Z",
      "acquirerTerminalId": "04813694",
      "acquirerMerchantId": "111058",
      "transactionIdentifiers": {
        "authorizationCode": "002404"
      },
      "transactionAmount": {
        "merchantTransactionAmount": 50,
        "merchantTransactionCurrency": "NOK",
        "cardholderTransactionAmount": 50,
        "cardholderTransactionCurrency": "NOK",
        "tipAmount": 10
      },
      "splitPayments": [
        {
          "type": "CARD",
          "cardType": "BANKAXEPT",
          "maskedPan": "900426******1200",
          "acquirerTransactionTimestamp": "2025-01-09T12:57:00Z",
          "acquirerTerminalId": "04813694",
          "acquirerMerchantId": "111058",
          "transactionIdentifiers": {
            "authorizationCode": "002403"
          },
          "transactionAmount": {
            "merchantTransactionAmount": 50,
            "merchantTransactionCurrency": "NOK",
            "cardholderTransactionAmount": 50,
            "cardholderTransactionCurrency": "NOK"
          }
        },
        {
          "amount": 40,
          "splitId": null,
          "type": "CASH"
        }
      ]
    }
  ],
    "qrCode": {
        "value": "https://example.com/receipt/123456",
        "valueEncoding": "UTF-8",
        "errorCorrectionLevel": "L"
    },
    "footerText": "string"
}'

Response 200 - Success
{
  "valid": true,
  "errors": []
}